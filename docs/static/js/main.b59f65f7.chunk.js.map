{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","id","onSubmit","e","preventDefault","trim","length","cats","document","getElementById","reset","type","placeholder","onChange","target","value","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render"],"mappings":"6MAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,yBAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OAEI,0BAAMC,GAAG,SAASC,SAbA,SAACC,GACnBA,EAAEC,iBAEEL,EAAWM,OAAOC,OAAS,IAE3BT,GAAc,SAAAU,GAAI,OAAGR,GAAH,mBAAiBQ,OACnCP,EAAc,yBACdQ,SAASC,eAAe,UAAUC,WAOlC,2BACIC,KAAK,OACLC,YAAab,EAEbc,SAtBa,SAACV,GACtBH,EAAcG,EAAEW,OAAOC,Y,uBCRlBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,gEAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAEnB,MAAO,CACH1B,GAAI0B,EAAI1B,GACR2B,MAAOD,EAAIC,MACXT,IAAKQ,EAAIE,OAAOC,iBAAiBX,QAVtB,kBAaZM,GAbY,4CAAH,sDCAPM,EAAc,SAAC,GAAmB,EAAlB9B,GAAmB,IAAhB2B,EAAe,EAAfA,MAAMT,EAAS,EAATA,IAClC,OACI,yBAAKa,UAAU,4DACX,yBAAKC,IAAMd,EAAMe,IAAMN,IACvB,2BAAKA,KCDJO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdnB,mBAAS,CAC/B0B,KAAM,GACNY,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAuBxC,OAhBAC,qBAAW,WAEPvB,EAASC,GACJuB,MAAM,SAAAC,GAEHH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAKtB,CAACnB,IAIGoB,EDnByBK,CAAczB,GAAjCY,EAHwB,EAG7BL,KAAYY,EAHiB,EAGjBA,QAGpB,OACI,oCACI,wBAAIJ,UAAU,qCAAd,IAAoDf,EAApD,KAEEmB,GAAW,uBAAGJ,UAAU,oCAAb,eAEb,yBAAKA,UAAU,aAEPH,EAAOH,KAAK,SAACC,GAAD,OACR,kBAAC,EAAD,eACIgB,IAAMhB,EAAI1B,IACL0B,UEUlBiB,EA3BM,WAAK,IAAD,EAGe9C,mBAAS,CAAC,WAHzB,mBAGd+C,EAHc,KAGFhD,EAHE,KAKrB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAEA,4BAGQgD,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI0B,IAAQ1B,EACRA,SAAYA,UCfxC6B,IAASC,OACP,kBAAC,EAAD,MACAvC,SAASC,eAAe,U","file":"static/js/main.b59f65f7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('Introduce un Elemento')\r\n\r\n    const handleInputChange= (e)=>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleKeyEnter= (e)=>{\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            \r\n            setCategories(cats=>[inputValue,...cats])\r\n            setinputValue('Introduce un Elemento')\r\n            document.getElementById('Myform').reset()\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <form id=\"Myform\" onSubmit= { handleKeyEnter }>\r\n            <input\r\n                type=\"text\"               \r\n                placeholder={inputValue}\r\n                \r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes= {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\n\r\nexport const getGifs = async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }f&limit=10&api_key=h58IWjx9tC9mzN6isL6UgTWgl4yrBwCe`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json()\r\n    \r\n    const gifs = data.map( img =>{\r\n       \r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (    \r\n        <div className=\"card animate__animated animate__rollIn animate__delay-2s\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n           \r\n        </div>  \r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n\r\n    const { data:images,loading } = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( (img) =>(\r\n                        <GifGridItem \r\n                            key= {img.id}    \r\n                            { ...img } \r\n                        />\r\n                    ))\r\n                }\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n   \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( ()=>{\r\n\r\n        getGifs( category )\r\n            .then( imgs=> {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n                \r\n            });\r\n\r\n    }, [category])\r\n    \r\n    \r\n\r\n    return state\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n    \r\n    const [categories, setCategories] = useState(['Avatar']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories}/>\r\n            <hr/>  \r\n\r\n            <ol>\r\n                \r\n                {\r\n                    categories.map( category =>( \r\n                        <GifGrid\r\n                            key = { category }\r\n                            category = {category} \r\n                        />       \r\n                    ))\r\n                }\r\n        \r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}